/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package SinglyLinkedLists;

import org.junit.Test;
import static org.junit.Assert.*;

public class AppTest {
    @Test public void testLinkedList(){
      //Can successfully instantiate an empty linked list
      LinkedList list = new LinkedList();
      assertNull("empty list have null head property", list.head);

      //Can properly insert into the linked list
      LinkedList list1 = new LinkedList();
      list1.insert(1);
      assertEquals("test insert method by checking if head is not null",1,list1.head.data);

      //The head property will properly point to the first node in the linked list
      LinkedList list3 = new LinkedList();
      list3.insert(3);
      list3.insert(4);
      list3.insert(5);

      assertEquals("test insert method by checking if head is not null",3,list3.head.data);

      //Can properly insert multiple nodes into the linked list
      LinkedList list4 = new LinkedList();
      list4.insert(1);
      list4.insert(2);
      list4.insert(10);

      assertEquals("test multiple insert method by checking if tail is not null and equal to last node",10,
        list4.tail.data);

      //Will return true when finding a value within the linked list that exists
      LinkedList list5 = new LinkedList();
      list5.insert(1);
      list5.insert(100);
      list5.insert(55);

      assertEquals("test includes method when finding a value the output is true",true,
        list5.includes(100));

      //Will return false when searching for a value in the linked list that does not exist
      assertEquals("test includes method when not finding a value the output is false",false,
        list5.includes(2));

      //Can properly return a collection of all the values that exist in the linked list
      String out = "{ 1 } -> { 100 } -> { 55 } -> NULL";
      assertEquals("test toStr method that return all list values",out,
        list5.toStr());
    }
}
